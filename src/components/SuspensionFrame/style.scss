@import "../../style.css";

// mixin
@mixin size($w, $h) {
  width: $w;
  height: $h;
}

@mixin bdrs($bdrs) {
  border-radius: $bdrs;
}


.profile {
  position: fixed;
  bottom: 5vw;
  left: 11vh;
  z-index: 9999;
  display: flex;

  &.open {
    opacity: 0;
  }

  @include size(110px, 33px);

  transform: translate(-50%, -50%);
  @include bdrs(5px);
  background-color: var(--suspensionBg);
  box-shadow: 0 0 2rem var(--suspensionShadowColor);
  animation: show-profile .5s forwards ease-in-out;

  @keyframes show-profile {
    0% {
      width: 0;
    }
  }

  .photo, .content {
    box-sizing: border-box;
    gap: 0;
  }

  .photo {
    @include size(33px, 33px);
    @include bdrs(50%);
    overflow: hidden;
    border: 5px solid var(--suspensionBg);
    background-color: var(--suspensionBg);
    margin-left: -20px;
    box-shadow: 0 0 .5rem var(--suspensionShadowColor);
    animation: rotate-photo .5s forwards ease-in-out;

    @keyframes rotate-photo {
      100% {
        transform: rotate(-360deg);
      }
    }

    img {
      width: 100%;
    }
  }

  .content {
    padding: 1px;
    overflow: hidden;
    position: absolute;
    @include size(100%, 100%);
    top: 0;
    left: 0;

    display: flex;
    justify-content: space-between;

    &::before {
      content: '';
      position: absolute;
      @include size(80px, 70px);
      background-color: var(--suspensionContentBefore);
      left: 0;
      top: -20px;
      z-index: -1;
      transform: rotate(-8deg);
    }

    .text {
      margin-top: 6px;
      margin-left: 20px;
    }


    @keyframes to-hamburger {
      from {
        transform: translateY(-50%) rotate(-180deg);
      }
    }

    @keyframes to-arrow {
      from {
        transform: translateY(-50%) rotate(0deg);
      }
      to {
        transform: translateY(-50%) rotate(180deg);
      }
    }

    .ant-btn-primary {
      background-color: var(--suspensionButtonBg);
      color: var(--suspensionButtonColor);
      z-index: -1;
    }

    .btn {
      cursor: pointer;
      position: relative;

      animation: to-hamburger 0.3s forwards ease-in-out;

      &::before, &::after {
        width: 60%;
        right: -1px;
      }

      &::before {
        transform: rotate(45deg);
      }

      &::after {
        transform: rotate(-45deg);
      }

    }

    &:hover {
      span {
        animation: none;
      }
    }


  }

  .sf-expansion {

    opacity: 0;

    @include size(50px, 50px);
    margin-left: 10px;
    @include bdrs(50%);
    position: absolute;
    top: 15px;
    right: -40%;
    background-color: rgba(white, .7);
    transform: translate(-40%, -50%);
    transition-duration: .3s;
    z-index: -1;

    button {
      cursor: pointer;
      @include size(20px, 32px);
      @include bdrs(50%);
      background-color: #ececec;
      //font-size: 26px;
      text-align: center;
      line-height: 25px;
      position: absolute;
      left: 20px;
      top: 10px;
      box-shadow: 0 0 .5rem #babbbc;
      transition-duration: .3s;

      :hover {
        transition-delay: initial !important;
      }

    }

    &.active {
      opacity: 1;

      button {
        $item: 3;

        @for $i from 0 through ($item - 1) {
          $deg: calc(180deg / ($item - 1)); //因圍繞半圓，為頭尾垂直對齊使item-1
          &:nth-of-type(#{$i + 1}) {
            transform: rotate($deg * $i - 90) translateX(50px) rotate(-$deg * $i + 90);
            transition-delay: 0.1s * $i;
          }
        }
      }
    }
  }
}
